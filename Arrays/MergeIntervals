bool cmp(vector<int>& a,vector<int>& b){
    if(a[0]==b[0]){
        return (a[1]<b[1]);
    }
    return (a[0]<b[0]);
}
class Solution {
public:
    vector<vector<int>> merge(vector<vector<int>>& intervals) {
        vector<vector<int>>v;
        int n=intervals.size();
        if(n==1||n==0)return intervals;
        sort(intervals.begin(),intervals.end(),cmp);
        int st=intervals[0][0];
        int ed=intervals[0][1];
        
        for(int i=1;i<=n;i++){
           
           if(i==n){
                vector<int>z;
                 z.push_back(st);
                z.push_back(ed);
               v.push_back(z);
               break;
           }
            if(intervals[i][0]<=ed){
                ed=max(ed,intervals[i][1]);
            }
            else{
                 vector<int>v1;
                 v1.push_back(st);
                v1.push_back(ed);
                st=intervals[i][0];
                ed=intervals[i][1];
                v.push_back(v1);
            }
            
        }
       
       
        return v;
    }